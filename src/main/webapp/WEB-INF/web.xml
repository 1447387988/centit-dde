<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>centit-dde3</display-name>
    <!-- param -->
    <!-- /WEB-INF/action-servlet.xml,   -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            WEB-INF/ws.xml,
            classpath:spring-hibernate.xml,
            classpath:sysconfig/spring-*.xml,
            classpath:appconfig/spring-*.xml,
            classpath:ddeconfig/spring-*.xml,
            classpath:spring-plugins/spring-*.xml,
            classpath:spring-security-cas.xml
        </param-value>
    </context-param>
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <context-param>
        <param-name>extremecomponentsPreferencesLocation</param-name>
        <param-value>/extremetable.properties</param-value>
    </context-param>
    <!-- spring 编码过滤器  解决中文乱码用-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>*.html</url-pattern>
    </filter-mapping>


    <!-- spring Security 认证与权限管理-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_security_logout</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/j_spring_cas_security_check</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <!-- Spring Open Session In View Pattern filter
      这个过滤器可以将访问数据库退出到Jsp中对属性的调用，主要起的作用是 按需访问数据库
      -->
    <filter>
        <filter-name>SOSIVPFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
        <init-param>
            <param-name>singleSession</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>flushMode</param-name>
            <param-value>AUTO</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SOSIVPFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <!-- ec table 的导出工具  -->
    <filter>
        <filter-name>eXtremeExport</filter-name>
        <filter-class>org.extremecomponents.table.filter.ExportFilter</filter-class>
        <init-param>
            <param-name>responseHeadersSetBeforeDoFilter</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>eXtremeExport</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <!--sitemesh3需要在struts2的prepare和execute两个filter之间-->
    <filter>
        <filter-name>struts2-prepare</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
        <!--这个参数指定Struts2从什么地方查找注解，使用注解的方式是才需要配置-->
        <!--
          <init-param>
              <param-name>actionPackages</param-name>
              <param-value>com.centit.sys.web,com.centit.app.web</param-value>
          </init-param>
           -->
        <init-param>
            <param-name>config</param-name>
            <param-value>struts-default.xml,struts-plugin.xml,struts-config.xml</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/data/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-prepare</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>
    <!-- sitemesh
       <filter>
       <filter-name>sitemesh</filter-name>
       <filter-class>
           com.opensymphony.sitemesh.webapp.SiteMeshFilter
       </filter-class>

     </filter>
     <filter-mapping>
         <filter-name>sitemesh</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
     -->
    <filter>
        <filter-name>struts2-execute</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/page/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>struts2-execute</filter-name>
        <url-pattern>/data/*</url-pattern>
    </filter-mapping>

    <!-- dwr config begin -->
    <servlet>
        <servlet-name>dwr-invoker</servlet-name>
        <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>pollAndCometEnabled</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>scriptSessionTimeout</param-name>
            <param-value>720000000</param-value>
        </init-param>
        <init-param>
            <param-name>org.directwebremoting.extend.ScriptSessionManager</param-name>
            <param-value>com.centit.app.util.DwrScriptSessionManager</param-value>
        </init-param>
        <init-param>
            <param-name>crossDomainSessionSecurity</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>allowScriptTagRemoting</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>

    </servlet>
    <servlet-mapping>
        <servlet-name>dwr-invoker</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>
    <!-- dwr config end -->


    <!--传输文件压缩过滤器  -->
    <!--<filter>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<filter-class>-->
    <!--com.centit.core.web.filter.GZIPFilter-->
    <!--</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.css</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.jsp</url-pattern>-->
    <!--</filter-mapping>-->
    <!--<filter-mapping>-->
    <!--<filter-name>compressionFilter</filter-name>-->
    <!--<url-pattern>*.js</url-pattern>-->
    <!--</filter-mapping>-->
    <!-- CAS统一登出过滤器 -->
    <!--
     <filter>
         <filter-name>CASSingleSignOutFilter</filter-name>
         <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
     </filter>

     <filter-mapping>
         <filter-name>CASSingleSignOutFilter</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
      -->
    <!--  缓存过滤器 好像有点问题，不能打开-->
    <!--
          <filter>
          <filter-name>cacheFilter</filter-name>
          <filter-class>com.centit.core.web.filter.CacheFilter</filter-class>
          </filter>

          <filter-mapping>
          <filter-name>cacheFilter</filter-name>
          <url-pattern>*.css</url-pattern>
          </filter-mapping>
          <filter-mapping>
          <filter-name>cacheFilter</filter-name>
          <url-pattern>*.gif</url-pattern>
          </filter-mapping>
          <filter-mapping>
          <filter-name>cacheFilter</filter-name>
          <url-pattern>*.js</url-pattern>
          </filter-mapping>
      -->
    <!-- Listeners -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.centit.sys.util.WebStartupLinstener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <listener>
        <!-- 对session 进行管理，比如限制最大登录数 -->
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>
    <!--  This listener is deployed in conjunction with the Spring plugin to enable the spring object
                 factory and the autowiring interceptors.  This only necessary starting with the Chapter Nine
                 version of the application, where Spring IoC is introduced.
     -->
    <!-- com.centit.sys.web.StartupListener EXTENDS org.springframework.web.context.ContextLoaderListener -->
    <servlet>
        <description />
        <display-name>OfficeServer</display-name>
        <servlet-name>OfficeServer</servlet-name>
        <servlet-class>com.centit.yxxk.weboffice.OfficeServer</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>OfficeServer</servlet-name>
        <url-pattern>/OfficeServer</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>
            org.apache.cxf.transport.servlet.CXFServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/ws/*</url-pattern>
    </servlet-mapping>


    <jsp-config>
        <taglib>
            <taglib-uri>http://www.centit.com/el/coderepo</taglib-uri>
            <taglib-location>/WEB-INF/coderepo.tld</taglib-location>
        </taglib>
    </jsp-config>


    <!-- CAS统一登出监听器 -->
    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
    <!-- 解决weblogic下doc xls pdf 文件打开乱码问题 -->
    <mime-mapping>
        <extension>doc</extension>
        <mime-type>application/msword</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>docx</extension>
        <mime-type>application/msword</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xls</extension>
        <mime-type>application/msexcel</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>xlsx</extension>
        <mime-type>application/msexcel</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>pdf</extension>
        <mime-type>application/pdf</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>zip</extension>
        <mime-type>application/zip</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>rar</extension>
        <mime-type>application/rar</mime-type>
    </mime-mapping>
    <!-- other -->
    <session-config>
        <session-timeout>120</session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>/page/index.jsp</welcome-file>
    </welcome-file-list>
</web-app>

