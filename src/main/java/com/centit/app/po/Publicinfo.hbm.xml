<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"><!--Mapping
	file autogenerated by codefan@centit.com -->
<hibernate-mapping>
    <class name="com.centit.app.po.Publicinfo" table="P_PUBLICINFO"
           schema="DDE">
        <id name="infocode" type="java.lang.String">
            <column name="INFOCODE" length="16"/>
            <generator class="assigned"/>
        </id>
        <property name="parentinfocode" type="java.lang.String">
            <column name="PARENTINFOCODE" length="16"/>
        </property>
        <property name="unitcode" type="java.lang.String">
            <column name="UNITCODE" length="16"/>
        </property>

        <many-to-one name="fileinfo" class="com.centit.app.po.Fileinfo"
                     column="filecode" unique="true" cascade="all" lazy="false"></many-to-one>

        <property name="filename" type="java.lang.String">
            <column name="FILENAME" length="128"/>
        </property>
        <property name="fileextension" type="java.lang.String">
            <column name="FILEEXTENSION" length="16"/>
        </property>
        <property name="ownercode" type="java.lang.String">
            <column name="OWNERCODE" length="8"/>
        </property>
        <property name="readcount" type="java.lang.Long">
            <column name="READCOUNT" precision="8" scale="0"/>
        </property>
        <property name="downloadcount" type="java.lang.Long">
            <column name="DOWNLOADCOUNT" precision="8" scale="0"/>
        </property>
        <property name="uploadtime" type="java.util.Date">
            <column name="UPLOADTIME" length="7"/>
        </property>
        <property name="modifytime" type="java.util.Date">
            <column name="MODIFYTIME" length="7"/>
        </property>
        <property name="status" type="java.lang.String">
            <column name="STATUS" length="1"/>
        </property>
        <property name="type" type="java.lang.String">
            <column name="TYPE" length="1"/>
        </property>
        <property name="isfolder" type="java.lang.String">
            <column name="ISFOLDER" length="1"/>
        </property>
        <property name="filedescription" type="java.lang.String">
            <column name="FILEDESCRIPTION" length="512"/>
        </property>
        <property name="filesize" type="java.lang.Long">
            <column name="FILESIZE"/>
        </property>
    </class>

    <!-- 列出机构的直接父级机构 -->
    <sql-query name="LIST_UNIT_DIRECT_PARENTS">
        <![CDATA[
	      select unitcode from f_unitinfo
	      start with (unitcode = :unitcode)
	      connect by prior parentunit = unitcode
	  ]]>
    </sql-query>

    <!-- 列出文件路径 -->
    <sql-query name="LIST_PATH_PARENTS">
        <![CDATA[
	      select infocode, filename from p_publicinfo
	      start with (infocode = :infocode)
	      connect by prior parentinfocode = infocode
	  ]]>
    </sql-query>

    <!-- 查询目录下所有文件/文件夹 -->
    <sql-query name="LIST_ALL_PUBLICFILES">
        <![CDATA[
			select {p.*} from p_publicinfo p where p.parentinfocode = :infocode order by p.isfolder desc , p.uploadtime desc
	  ]]>
    </sql-query>

    <!-- 按名称查询查询目录下的文件夹 -->
    <sql-query name="GET_FOLDER_BY_NAME">
        <![CDATA[
			select {p.*} from p_publicinfo p 
			where p.filename = :name 
			and p.isfolder = '1' 
			and p.parentinfocode = :infocode
	  ]]>
    </sql-query>

    <!-- 按名称查询查询目录下的文件 -->
    <sql-query name="GET_FILE_BY_NAME">
        <![CDATA[
			select {p.*} from p_publicinfo p 
			where p.filename = :name 
			and p.fileextension = :ext 
			and p.isfolder = '0' 
			and p.parentinfocode = :infocode
	  ]]>
    </sql-query>

    <!-- 按名称查询查询目录下的文件 -->
    <sql-query name="GET_FILE_BY_NAME_WITHOUT_EXT">
        <![CDATA[
			select {p.*} from p_publicinfo p 
			where p.filename = :name 
			and p.fileextension is null 
			and p.isfolder = '0' 
			and p.parentinfocode = :infocode
	  ]]>
    </sql-query>

    <!-- 根据ID所有文件/文件夹 -->
    <sql-query name="LIST_PUBLICFILES_BY_IDS">
        <![CDATA[
			from Publicinfo p where p.infocode in (:codes)
	  ]]>
    </sql-query>

    <!-- 查询机构的默认根目录 -->
    <sql-query name="GET_UNIT_ROOT_DIRECTORY">
        <![CDATA[
	 	select {p.*} from p_publicinfo p where p.isfolder = '1' and p.type = '1' and p.unitcode = :unitcode
	  ]]>
    </sql-query>
</hibernate-mapping>